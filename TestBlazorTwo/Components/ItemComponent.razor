@inherits BaseComponent

<CascadingValue Value="Tree">
    <div class="row">
        @if (Tree != null)
        {
            @if (Tree.Type == Model.ITEM_TYPES.SECTION)
            {
                <SectionComponent Level="Level"></SectionComponent>
            }
            else if (Tree.Type == Model.ITEM_TYPES.CATEGORY)
            {
                <CategoryComponent Level="Level"></CategoryComponent>
            }
            else if (Tree.Type == Model.ITEM_TYPES.TEXTSINGLE)
            {
                <TextSingleComponent Level="Level"></TextSingleComponent>
            }

        }
    </div>

    @if (Tree.Children != null && Tree.Children.Any())
    {
        if (Tree.Type == Model.ITEM_TYPES.SECTION)
        {
            <PageComponent>
                <div class="col-lg-12 mb-1">
                    <div class="level-@Level template-section">
                        <Dropzone Items="Tree.Children.ToList()" InstantReplace="false" TItem="Tree" Accepts="Accepts" OnItemDrop="@((args) => OnDropped.InvokeAsync(args))">
                            <ItemComponent Tree=@context Level="@(Level + 1)" @key=context></ItemComponent>
                        </Dropzone>
                    </div>
                </div>
            </PageComponent>
        }
        else
        {
            <div class="col-lg-12 mb-1">
                <div class="level-@Level template-section">
                    <Dropzone Items="Tree.Children.ToList()" InstantReplace="false" TItem="Tree" Accepts="Accepts">
                        <ItemComponent Tree=@context Level="@(Level + 1)" @key=context></ItemComponent>
                    </Dropzone>
                </div>
            </div>
        }
    }
</CascadingValue>

